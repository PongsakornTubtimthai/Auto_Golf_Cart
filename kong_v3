#include <stdint.h>
#include <stdlib.h>
#include <digitalWriteFast.h>
#include <SPI.h>

//Define Pinmode
#define FORWARDIN A3
#define BACKWARDIN A5
#define SAFTY_IN A4
#define SPEED_IN A0

#define FORWARDOUT 38
#define BACKWARDOUT 37
#define SAFTY_OUT 36

#define ENC_IN 2
#define ENC_IN2 3
#define ENC_COUNT_REV 52

#define CSPIN    53

#define testenvpin A7

//Define Parameter
long previousMillis = 0;
long currentMillis = 0;
int interval = 1000;

float stage_forward = 0;
float stage_backward = 0;
float stage_safty = 0;
float stage_speed = 0;

unsigned int value = 0;

byte address = 0x11;
float testenv;

void setup() {
  pinMode(FORWARDIN, INPUT); //Input
  pinMode(BACKWARDIN, INPUT);
  pinMode (SAFTY_IN, INPUT);
  /*-----------------------------------------------------------------------------------*/
  pinMode(FORWARDOUT, OUTPUT);//Output
  pinMode(BACKWARDOUT, OUTPUT);
  pinMode (SAFTY_OUT, OUTPUT);
  /*-----------------------------------------------------------------------------------*/
  pinMode (testenvpin, INPUT);
  /*-----------------------------------------------------------------------------------*/
  pinMode (53, OUTPUT);
  SPI.begin();
  Serial.begin(9600);
}

void loop() {
  currentMillis = millis();
  if (currentMillis - previousMillis > interval)
  {
    previousMillis = currentMillis;
  }

  stage_forward = analogRead(FORWARDIN);
  stage_backward = analogRead(BACKWARDIN);
  stage_safty = analogRead(SAFTY_IN);
  stage_speed = analogRead(SPEED_IN);

  Serial.print("F =");
  Serial.println(stage_forward);
  Serial.print("B =");
  Serial.println(stage_backward);
  Serial.print("S =");
  Serial.println(stage_safty);

  testenv =  analogRead(testenvpin);

  runSpeed(stage_forward, stage_backward, stage_safty, value);

}

void runSpeed (float stage_forward, float stage_backward, float stage_safty, float value)
{

  if ((stage_forward > 1000) && (stage_backward < 1000) && (stage_safty > 1000))
  {
    Serial.println("----Mode Forward----");
    digitalWrite(BACKWARDOUT, LOW);
    digitalWrite(SAFTY_OUT, HIGH);
    digitalWrite(FORWARDOUT, HIGH);
    value = map(testenv, 0, 1023, 0, 255);
    digitalPotWrite(value);
  }
  if ((stage_backward > 1000) && (stage_forward < 1000) && (stage_safty > 1000))
  {
    Serial.println("----Mode Backward----");
    digitalWrite(FORWARDOUT, LOW);
    digitalWrite(SAFTY_OUT, HIGH);
    digitalWrite(BACKWARDOUT, HIGH);
    value = map(testenv, 0, 1023, 0, 255);
    digitalPotWrite(value);
  }
  else if ((stage_backward < 1000) && (stage_forward < 1000))
  {
    Serial.println("--------Stop-------");
    digitalWrite(SAFTY_OUT, LOW);
    digitalWrite(FORWARDOUT, LOW);
    digitalWrite(BACKWARDOUT, LOW);
    value = 0;
    digitalPotWrite(value);
  }
}

int digitalPotWrite(float value)
{
  digitalWrite(53, LOW);
  SPI.transfer(address);
  SPI.transfer(value);
  digitalWrite(53, HIGH);
}
